<?xml version="1.0"?>

<!-- For more information on using web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an atrribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->

  <spaces
    connectionString="MongoSpacesConnStr"
    databaseName="spacesdb"
    collectionName="Spaces"
    applicationName="/"
    name="MongoDB Provider for Spaces"
    description="This is the implementation of Spaces for MongoDB"
    urlDomain="Mariacheros.com"  xdt:Transform="Replace"/>

  <appSettings>
    <!--  Application Settings - BEGIN  -->
    <add key="ApplicationName" value="Mariacheros.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="GoogleAnalyticsKey" value="UA-6196731-20" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="CompanyName" value="Mariacheros.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="CDN-Url" value="http://scripts.altovientosolutions.com"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="StartUrl" value="~/Mariachi/"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
    <!-- Must be in lowercase -->
    <add key="ReservedUsernames" value="account,referrals,spaces,home,api,ipc,mobile,support,help,content,mariacheros,mariachero,mariachera"/>
    <!-- Used to customize the style of the application. -->
    <add key="CustomBodyStyle" value="Mariacheros"/>
    
  </appSettings>
  <system.web>
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
    <healthMonitoring enabled="true" heartbeatInterval="0" xdt:Transform="Replace">
        <!-- Configure the providers -->
        <bufferModes>
          <add name="Extra Critical Notification"
            maxBufferSize="10" maxFlushSize="5"
            urgentFlushThreshold="1" regularFlushInterval="00:10:00"
            urgentFlushInterval="00:01:00" maxBufferThreads="1" />
          <add name="Normal Notification"
            maxBufferSize="50" maxFlushSize="15"
            urgentFlushThreshold="1" regularFlushInterval="01:00:00"
            urgentFlushInterval="00:10:00" maxBufferThreads="1" />
          <add name="Low Priority Notification"
            maxBufferSize="100" maxFlushSize="40"
            urgentFlushThreshold="1" regularFlushInterval="12:00:00"
            urgentFlushInterval="00:10:00" maxBufferThreads="1" />
        </bufferModes>


        <providers>
          <add name="SimpleMailWebEventProvider" type="System.Web.Management.SimpleMailWebEventProvider,System.Web,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"
              from="notifications@illustratedpartscatalogs.org"
               to="agarcian@ieee.org"
              bodyHeader="Warning!"
              bodyFooter="Please investigate ASAP."
              subjectPrefix="Action required."
              buffer="true"
              maxEventLength="4096"
              maxMessagesPerNotification="1"
               bufferMode="Normal Notification"
             />
          <!--<add name="TemplatedMailWebEventProvider" type="System.Web.Management.TemplatedMailWebEventProvider,System.Web,Version=2.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"/>-->
          <!--<add name="SqlWebEventProvider" type="System.Web.Management.SqlWebEventProvide,System.Web,Version=2.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"/>-->
          <!--<add name="EventLogWebEventProvider" type="System.Web.Management.EventLogWebEventProvider,System.Web,Version=2.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"/>-->
          <add name="TraceWebEventProvider" type="System.Web.Management.TraceWebEventProvider, System.Web,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"/>
          <!--<add name="WmiWebEventProvider" type="System.Web.Management.WmiWebEventProvider,System.Web,Version=2.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a"/>-->
        </providers>

        <profiles>
          <add name="Default" minInstances="1" maxLimit="Infinite" minInterval="00:01:00"
               custom="" />
          <add name="Critical" minInstances="1" maxLimit="Infinite" minInterval="00:00:00"
               custom="" />
          <add name="AccountManagement" minInstances="1" maxLimit="Infinite" minInterval="00:00:00"
               custom="" />
        </profiles>

        <!--  Configure the events -->
        <eventMappings>
          <add name="PasswordResetEvent" type="AltovientoSolutions.Common.Instrumentation.PasswordResetEvent,AltovientoSolutions.Common"/>
          <add name="InvitationEmailSentEvent" type="AltovientoSolutions.Common.Instrumentation.InvitationEmailSentEvent,AltovientoSolutions.Common"/>
          <add name="PasswordChangedEvent" type="AltovientoSolutions.Common.Instrumentation.PasswordChangedEvent,AltovientoSolutions.Common"/>
          <add name="SpacesProviderErrorEvent" type="AltovientoSolutions.Security.Instrumentation.SpacesProviderErrorEvent,AltovientoSolutions.Security"/>
        </eventMappings>

        <!-- Define the rules -->
        <rules>
          <add name="Password Reset Event"
            eventName="PasswordResetEvent"
            provider="TraceWebEventProvider"
            profile="AccountManagement"
            minInterval="00:00:00" />

          <add name="Password Change Event"
            eventName="PasswordChangedEvent"
            provider="TraceWebEventProvider"
            profile="AccountManagement"
            minInterval="00:00:00" />

          <add name="Standard Web Requests"
            eventName="All Events"
            provider="TraceWebEventProvider"
            profile="Default"
            minInterval="00:01:00" />

          <add name="Spaces Management"
           eventName="All Errors"
           provider="SimpleMailWebEventProvider"
           profile="Critical"
           minInterval="00:01:00" />

        </rules>

      </healthMonitoring>

    <membership defaultProvider="MongoDBProvider" userIsOnlineTimeWindow="15" xdt:Transform="Replace">
      <providers>
        <clear />
        <add
          name="MongoDBProvider"
          type="ASPNetProvidersForMongoDB.MongoDBMembershipProvider, ASPNetProvidersForMongoDB"
          connectionStringName="MongoProvidersDBConnStr"
          enablePasswordRetrieval="true"
          enablePasswordReset="true"
          requiresQuestionAndAnswer="false"
          writeExceptionsToEventLog="true"
          mongoProviderDatabaseName ="aspnetproviderdb"
          mongoProviderUsersCollectionName="Users"
          applicationName="IPC"
          />

        <!-- mongoProviderDatabaseName: Name of the mongoDB database to keep all the data for the provider. -->
        <!-- mongoProviderUsersCollectionName: Name of the collection in the mongoDB database to keep the user data. -->

      </providers>
    </membership>

    <roleManager defaultProvider="MongoDBProvider" enabled="true" xdt:Transform="Replace">
      <providers>
        <clear />
        <add applicationName="IPC"
            name="MongoDBProvider"
             type="ASPNetProvidersForMongoDB.MongoDBRolesProvider, ASPNetProvidersForMongoDB"
            connectionStringName="MongoProvidersDBConnStr"
             writeExceptionsToEventLog="true"
          mongoProviderDatabaseName ="aspnetproviderdb"
          mongoProviderUsersCollectionName="Roles"
             />
      </providers>
    </roleManager>

    <profile defaultProvider="MongoDBProvider" inherits="AltovientoSolutions.Security.ProfileCommon" xdt:Transform="Replace">
      <providers>
        <add
          applicationName="IPC"
          name="MongoDBProvider"
          type="ASPNetProvidersForMongoDB.MongoDBProfileProvider, ASPNetProvidersForMongoDB"
          connectionStringName="MongoProvidersDBConnStr"
          writeExceptionsToEventLog="true"
          mongoProviderDatabaseName ="aspnetproviderdb"
          mongoProviderUsersCollectionName="Profiles" />
      </providers>
    </profile>
  
  
  
  </system.web>


</configuration>